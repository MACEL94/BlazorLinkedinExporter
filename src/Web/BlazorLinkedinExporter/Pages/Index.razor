@page "/"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Index</PageTitle>

<h3>ClaimsPrincipal Data</h3>

<p>@authMessage</p>

@if (claims.Count() > 0)
{
    <ul>
        @foreach (var claim in claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}

@code {
    private string? authMessage;
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user?.Identity?.IsAuthenticated ?? false)
        {
            var surnameClaim = user.FindFirst(c => c.Type == ClaimTypes.Surname);
            var surnameOrSpace = surnameClaim != null ? ($" {surnameClaim.Value} ") : " ";
            authMessage = $"{user.Identity.Name}{surnameOrSpace}is authenticated.";
            claims = user.Claims;
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
        }

        await base.OnInitializedAsync();
    }
}